// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SeaBattle.DataAccess.Postgre;

namespace SeaBattle.DataAccess.Postgre.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SeaBattle.DataAccess.Postgre.Entities.GameEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ended")
                        .HasColumnType("boolean")
                        .HasColumnName("ended");

                    b.Property<bool>("Finished")
                        .HasColumnType("boolean")
                        .HasColumnName("finished");

                    b.Property<bool>("Init")
                        .HasColumnType("boolean")
                        .HasColumnName("init");

                    b.Property<int>("Size")
                        .HasColumnType("integer")
                        .HasColumnName("size");

                    b.HasKey("Id");

                    b.ToTable("games", "private");
                });

            modelBuilder.Entity("SeaBattle.DataAccess.Postgre.Entities.ShipEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("GameId")
                        .HasColumnType("bigint")
                        .HasColumnName("game_id");

                    b.Property<int>("XEnd")
                        .HasColumnType("integer")
                        .HasColumnName("x_end");

                    b.Property<int>("XStart")
                        .HasColumnType("integer")
                        .HasColumnName("x_start");

                    b.Property<int>("YEnd")
                        .HasColumnType("integer")
                        .HasColumnName("y_end");

                    b.Property<int>("YStart")
                        .HasColumnType("integer")
                        .HasColumnName("y_start");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("ships", "private");
                });

            modelBuilder.Entity("SeaBattle.DataAccess.Postgre.Entities.ShotEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("GameId")
                        .HasColumnType("bigint")
                        .HasColumnName("game_id");

                    b.Property<long?>("ShipId")
                        .HasColumnType("bigint")
                        .HasColumnName("ship_id");

                    b.Property<int>("X")
                        .HasColumnType("integer")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("integer")
                        .HasColumnName("y");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ShipId");

                    b.ToTable("shots", "private");
                });

            modelBuilder.Entity("SeaBattle.DataAccess.Postgre.Entities.ShipEntity", b =>
                {
                    b.HasOne("SeaBattle.DataAccess.Postgre.Entities.GameEntity", "Game")
                        .WithMany("Ships")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("SeaBattle.DataAccess.Postgre.Entities.ShotEntity", b =>
                {
                    b.HasOne("SeaBattle.DataAccess.Postgre.Entities.GameEntity", "Game")
                        .WithMany("Shots")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeaBattle.DataAccess.Postgre.Entities.ShipEntity", "Ship")
                        .WithMany("Shots")
                        .HasForeignKey("ShipId");

                    b.Navigation("Game");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SeaBattle.DataAccess.Postgre.Entities.GameEntity", b =>
                {
                    b.Navigation("Ships");

                    b.Navigation("Shots");
                });

            modelBuilder.Entity("SeaBattle.DataAccess.Postgre.Entities.ShipEntity", b =>
                {
                    b.Navigation("Shots");
                });
#pragma warning restore 612, 618
        }
    }
}
